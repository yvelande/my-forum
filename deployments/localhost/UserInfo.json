{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "userId",
          "type": "string"
        }
      ],
      "name": "UserRegistered",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_userId",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_role",
          "type": "string"
        }
      ],
      "name": "changeUserRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_userName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_pwd",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_userAddress",
          "type": "address"
        }
      ],
      "name": "createUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_userId",
          "type": "string"
        }
      ],
      "name": "getUserInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "userAddress",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "userId",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "userName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "pwd",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "role",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "assert",
              "type": "string"
            }
          ],
          "internalType": "struct UserInfo.ReturnUser",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_userId",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_pwd",
          "type": "string"
        }
      ],
      "name": "loginUser",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "registeredUserAddresses",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "uint256ToString",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "userMap",
      "outputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "userId",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "userName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "pwd",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "role",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "assert",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x0648af548b8aea10fbe4821a7cff5d67b7d00c8fa8019008471efaa6e31c9f2d",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "1312022",
    "logsBloom": "0x
    "blockHash": "0x49f05dcc0dfa03ee5a12778c8c7ee55400042135ffe65a33da04dec91e31a684",
    "transactionHash": "0x0648af548b8aea10fbe4821a7cff5d67b7d00c8fa8019008471efaa6e31c9f2d",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "1312022",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "dccc5172e5ec6b4df8a0acba327ddee2",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"userId\",\"type\":\"string\"}],\"name\":\"UserRegistered\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_userId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_role\",\"type\":\"string\"}],\"name\":\"changeUserRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_userName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_pwd\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"createUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_userId\",\"type\":\"string\"}],\"name\":\"getUserInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"userId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"userName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"pwd\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"role\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"assert\",\"type\":\"string\"}],\"internalType\":\"struct UserInfo.ReturnUser\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_userId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_pwd\",\"type\":\"string\"}],\"name\":\"loginUser\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"registeredUserAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"uint256ToString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"userMap\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"userId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"userName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"pwd\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"role\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"assert\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/UserInfo.sol\":\"UserInfo\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/UserInfo.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\ncontract UserInfo {\\n    // \\u5b9a\\u4e49\\u7528\\u6237\\u7ed3\\u6784\\u4f53\\n    struct User {\\n        address userAddress; // \\u7528\\u6237\\u94b1\\u5305\\u5730\\u5740\\n        string userId; // \\u7528\\u6237ID\\n        string userName; // \\u7528\\u6237\\u540d\\n        string pwd; // \\u5bc6\\u7801\\n        string role; // \\u7528\\u6237\\u89d2\\u8272\\n        uint256 assert; // \\u7528\\u6237\\u8d44\\u4ea7\\n        // uint256 activeValue; // \\u6d3b\\u8dc3\\u503c\\n    }\\n\\n    struct ReturnUser {\\n        address userAddress; // \\u7528\\u6237\\u94b1\\u5305\\u5730\\u5740\\n        string userId; // \\u7528\\u6237ID\\n        string userName; // \\u7528\\u6237\\u540d\\n        string pwd; // \\u5bc6\\u7801\\n        string role; // \\u7528\\u6237\\u89d2\\u8272\\n        string assert; // \\u7528\\u6237\\u8d44\\u4ea7\\n        // uint256 activeValue; // \\u6d3b\\u8dc3\\u503c\\n    }\\n    // \\u7528\\u6237ID\\u5230\\u7528\\u6237\\u7ed3\\u6784\\u4f53\\u7684\\u6620\\u5c04\\n    mapping(string => User) public userMap;\\n    // \\u5df2\\u6ce8\\u518c\\u7528\\u6237\\u5730\\u5740\\n    address[] public registeredUserAddresses;\\n\\n    // event UserRegistered(string userId);\\n    event UserRegistered(string userId);\\n\\n    // \\u6dfb\\u52a0\\u7528\\u6237\\u51fd\\u6570\\n    function createUser(\\n        string memory _userName,\\n        string memory _pwd,\\n        address _userAddress //\\n    ) public {\\n        // \\u751f\\u6210\\u7528\\u6237ID\\uff08\\u4f7f\\u7528\\u7b80\\u5355\\u7684\\u4f2a\\u968f\\u673a\\u6570\\u751f\\u6210\\u51fd\\u6570\\uff09\\n        uint userId = uint256(\\n            keccak256(abi.encodePacked(block.timestamp, _userName))\\n        );\\n        string memory _userId = uint256ToString(userId);\\n        // \\u89e6\\u53d1\\u4e8b\\u4ef6\\n        User memory newUser = User(\\n            _userAddress,\\n            _userId,\\n            _userName,\\n            _pwd,\\n            // \\u666e\\u901a\\u7528\\u6237roleID\\u662f\\u201c0\\u201d\\n            \\\"0\\\",\\n            0\\n        );\\n        userMap[_userId] = newUser;\\n        registeredUserAddresses.push(_userAddress);\\n        emit UserRegistered(_userId);\\n    }\\n\\n    // \\u7528\\u6237\\u767b\\u5f55\\u51fd\\u6570\\n    function loginUser(\\n        string memory _userId,\\n        string memory _pwd\\n    ) public view returns (bool) {\\n        return\\n            keccak256(abi.encodePacked(userMap[_userId].pwd)) ==\\n            keccak256(abi.encodePacked(_pwd));\\n    }\\n\\n    // \\u67e5\\u8be2\\u7528\\u6237\\u4fe1\\u606f\\u51fd\\u6570\\n    function getUserInfo(\\n        string memory _userId\\n    ) public view returns (ReturnUser memory) {\\n        User memory user = userMap[_userId];\\n        ReturnUser memory returnUser = ReturnUser(\\n            user.userAddress,\\n            user.userId,\\n            user.userName,\\n            user.pwd,\\n            user.role,\\n            uint256ToString(user.assert)\\n        );\\n        return returnUser;\\n    }\\n\\n    // \\u66f4\\u6539\\u7528\\u6237\\u89d2\\u8272\\u51fd\\u6570\\n    function changeUserRole(string memory _userId, string memory _role) public {\\n        userMap[_userId].role = _role;\\n    }\\n\\n    // \\u5c06 uint256 \\u7c7b\\u578b\\u8f6c\\u6362\\u4e3a\\u5b57\\u7b26\\u4e32\\n    function uint256ToString(\\n        uint256 value\\n    ) public pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + (value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n}\\n\",\"keccak256\":\"0xed57201b2190710e2c5c7d0af79b6d4b842d72371243f3a2eb64cadecf5a29a3\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506116d0806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063ae7b16a71161005b578063ae7b16a714610112578063b5ca25411461012e578063ce7e51e31461014a578063eb15f3801461017a5761007d565b806322ce12e5146100825780632365dce2146100b25780637c9b7fdd146100e2575b600080fd5b61009c60048036038101906100979190610df6565b6101af565b6040516100a9919061122e565b60405180910390f35b6100cc60048036038101906100c79190610ef9565b610228565b6040516100d99190611196565b60405180910390f35b6100fc60048036038101906100f79190610dad565b610267565b604051610109919061126b565b60405180910390f35b61012c60048036038101906101279190610df6565b6105b4565b005b61014860048036038101906101439190610e6e565b6105ee565b005b610164600480360381019061015f9190610ef9565b610831565b6040516101719190611249565b60405180910390f35b610194600480360381019061018f9190610dad565b610992565b6040516101a6969594939291906111b1565b60405180910390f35b6000816040516020016101c29190611140565b604051602081830303815290604052805190602001206000846040516101e89190611140565b90815260200160405180910390206003016040516020016102099190611157565b6040516020818303038152906040528051906020012014905092915050565b6001818154811061023857600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61026f610c24565b600080836040516102809190611140565b90815260200160405180910390206040518060c00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820180546102ff90611475565b80601f016020809104026020016040519081016040528092919081815260200182805461032b90611475565b80156103785780601f1061034d57610100808354040283529160200191610378565b820191906000526020600020905b81548152906001019060200180831161035b57829003601f168201915b5050505050815260200160028201805461039190611475565b80601f01602080910402602001604051908101604052809291908181526020018280546103bd90611475565b801561040a5780601f106103df5761010080835404028352916020019161040a565b820191906000526020600020905b8154815290600101906020018083116103ed57829003601f168201915b5050505050815260200160038201805461042390611475565b80601f016020809104026020016040519081016040528092919081815260200182805461044f90611475565b801561049c5780601f106104715761010080835404028352916020019161049c565b820191906000526020600020905b81548152906001019060200180831161047f57829003601f168201915b505050505081526020016004820180546104b590611475565b80601f01602080910402602001604051908101604052809291908181526020018280546104e190611475565b801561052e5780601f106105035761010080835404028352916020019161052e565b820191906000526020600020905b81548152906001019060200180831161051157829003601f168201915b50505050508152602001600582015481525050905060006040518060c00160405280836000015173ffffffffffffffffffffffffffffffffffffffff168152602001836020015181526020018360400151815260200183606001518152602001836080015181526020016105a58460a00151610831565b81525090508092505050919050565b806000836040516105c59190611140565b908152602001604051809103902060040190805190602001906105e9929190610c70565b505050565b6000428460405160200161060392919061116e565b6040516020818303038152906040528051906020012060001c9050600061062982610831565b905060006040518060c001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018781526020018681526020016040518060400160405280600181526020017f3000000000000000000000000000000000000000000000000000000000000000815250815260200160008152509050806000836040516106b99190611140565b908152602001604051809103902060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101908051906020019061072a929190610c70565b506040820151816002019080519060200190610747929190610c70565b506060820151816003019080519060200190610764929190610c70565b506080820151816004019080519060200190610781929190610c70565b5060a082015181600501559050506001849080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f270ff4b111e5baa49283562af127cc5ea74e9d6c9efd5465578bd9223d5843f0826040516108219190611249565b60405180910390a1505050505050565b60606000821415610879576040518060400160405280600181526020017f3000000000000000000000000000000000000000000000000000000000000000815250905061098d565b600082905060005b600082146108ab578080610894906114d8565b915050600a826108a49190611386565b9150610881565b60008167ffffffffffffffff8111156108c7576108c6611618565b5b6040519080825280601f01601f1916602001820160405280156108f95781602001600182028036833780820191505090505b5090505b600085146109865760018261091291906113b7565b9150600a85610921919061152b565b603061092d9190611330565b60f81b818381518110610943576109426115e9565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8561097f9190611386565b94506108fd565b8093505050505b919050565b6000818051602081018201805184825260208301602085012081835280955050505050506000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010180546109f190611475565b80601f0160208091040260200160405190810160405280929190818152602001828054610a1d90611475565b8015610a6a5780601f10610a3f57610100808354040283529160200191610a6a565b820191906000526020600020905b815481529060010190602001808311610a4d57829003601f168201915b505050505090806002018054610a7f90611475565b80601f0160208091040260200160405190810160405280929190818152602001828054610aab90611475565b8015610af85780601f10610acd57610100808354040283529160200191610af8565b820191906000526020600020905b815481529060010190602001808311610adb57829003601f168201915b505050505090806003018054610b0d90611475565b80601f0160208091040260200160405190810160405280929190818152602001828054610b3990611475565b8015610b865780601f10610b5b57610100808354040283529160200191610b86565b820191906000526020600020905b815481529060010190602001808311610b6957829003601f168201915b505050505090806004018054610b9b90611475565b80601f0160208091040260200160405190810160405280929190818152602001828054610bc790611475565b8015610c145780601f10610be957610100808354040283529160200191610c14565b820191906000526020600020905b815481529060010190602001808311610bf757829003601f168201915b5050505050908060050154905086565b6040518060c00160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081526020016060815260200160608152602001606081525090565b828054610c7c90611475565b90600052602060002090601f016020900481019282610c9e5760008555610ce5565b82601f10610cb757805160ff1916838001178555610ce5565b82800160010185558215610ce5579182015b82811115610ce4578251825591602001919060010190610cc9565b5b509050610cf29190610cf6565b5090565b5b80821115610d0f576000816000905550600101610cf7565b5090565b6000610d26610d21846112b2565b61128d565b905082815260208101848484011115610d4257610d4161164c565b5b610d4d848285611433565b509392505050565b600081359050610d648161166c565b92915050565b600082601f830112610d7f57610d7e611647565b5b8135610d8f848260208601610d13565b91505092915050565b600081359050610da781611683565b92915050565b600060208284031215610dc357610dc2611656565b5b600082013567ffffffffffffffff811115610de157610de0611651565b5b610ded84828501610d6a565b91505092915050565b60008060408385031215610e0d57610e0c611656565b5b600083013567ffffffffffffffff811115610e2b57610e2a611651565b5b610e3785828601610d6a565b925050602083013567ffffffffffffffff811115610e5857610e57611651565b5b610e6485828601610d6a565b9150509250929050565b600080600060608486031215610e8757610e86611656565b5b600084013567ffffffffffffffff811115610ea557610ea4611651565b5b610eb186828701610d6a565b935050602084013567ffffffffffffffff811115610ed257610ed1611651565b5b610ede86828701610d6a565b9250506040610eef86828701610d55565b9150509250925092565b600060208284031215610f0f57610f0e611656565b5b6000610f1d84828501610d98565b91505092915050565b610f2f816113eb565b82525050565b610f3e816113eb565b82525050565b610f4d816113fd565b82525050565b6000610f5e826112f8565b610f688185611303565b9350610f78818560208601611442565b610f818161165b565b840191505092915050565b6000610f97826112f8565b610fa18185611314565b9350610fb1818560208601611442565b610fba8161165b565b840191505092915050565b6000610fd0826112f8565b610fda8185611325565b9350610fea818560208601611442565b80840191505092915050565b6000815461100381611475565b61100d8186611325565b9450600182166000811461102857600181146110395761106c565b60ff1983168652818601935061106c565b611042856112e3565b60005b8381101561106457815481890152600182019150602081019050611045565b838801955050505b50505092915050565b600060c08301600083015161108d6000860182610f26565b50602083015184820360208601526110a58282610f53565b915050604083015184820360408601526110bf8282610f53565b915050606083015184820360608601526110d98282610f53565b915050608083015184820360808601526110f38282610f53565b91505060a083015184820360a086015261110d8282610f53565b9150508091505092915050565b61112381611429565b82525050565b61113a61113582611429565b611521565b82525050565b600061114c8284610fc5565b915081905092915050565b60006111638284610ff6565b915081905092915050565b600061117a8285611129565b60208201915061118a8284610fc5565b91508190509392505050565b60006020820190506111ab6000830184610f35565b92915050565b600060c0820190506111c66000830189610f35565b81810360208301526111d88188610f8c565b905081810360408301526111ec8187610f8c565b905081810360608301526112008186610f8c565b905081810360808301526112148185610f8c565b905061122360a083018461111a565b979650505050505050565b60006020820190506112436000830184610f44565b92915050565b600060208201905081810360008301526112638184610f8c565b905092915050565b600060208201905081810360008301526112858184611075565b905092915050565b60006112976112a8565b90506112a382826114a7565b919050565b6000604051905090565b600067ffffffffffffffff8211156112cd576112cc611618565b5b6112d68261165b565b9050602081019050919050565b60008190508160005260206000209050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600061133b82611429565b915061134683611429565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561137b5761137a61155c565b5b828201905092915050565b600061139182611429565b915061139c83611429565b9250826113ac576113ab61158b565b5b828204905092915050565b60006113c282611429565b91506113cd83611429565b9250828210156113e0576113df61155c565b5b828203905092915050565b60006113f682611409565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015611460578082015181840152602081019050611445565b8381111561146f576000848401525b50505050565b6000600282049050600182168061148d57607f821691505b602082108114156114a1576114a06115ba565b5b50919050565b6114b08261165b565b810181811067ffffffffffffffff821117156114cf576114ce611618565b5b80604052505050565b60006114e382611429565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156115165761151561155c565b5b600182019050919050565b6000819050919050565b600061153682611429565b915061154183611429565b9250826115515761155061158b565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b611675816113eb565b811461168057600080fd5b50565b61168c81611429565b811461169757600080fd5b5056fea264697066735822122043d95cd6da96e3efad7958cd89f653ac864603f172f885bd4068cf2d8312157f64736f6c63430008070033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c8063ae7b16a71161005b578063ae7b16a714610112578063b5ca25411461012e578063ce7e51e31461014a578063eb15f3801461017a5761007d565b806322ce12e5146100825780632365dce2146100b25780637c9b7fdd146100e2575b600080fd5b61009c60048036038101906100979190610df6565b6101af565b6040516100a9919061122e565b60405180910390f35b6100cc60048036038101906100c79190610ef9565b610228565b6040516100d99190611196565b60405180910390f35b6100fc60048036038101906100f79190610dad565b610267565b604051610109919061126b565b60405180910390f35b61012c60048036038101906101279190610df6565b6105b4565b005b61014860048036038101906101439190610e6e565b6105ee565b005b610164600480360381019061015f9190610ef9565b610831565b6040516101719190611249565b60405180910390f35b610194600480360381019061018f9190610dad565b610992565b6040516101a6969594939291906111b1565b60405180910390f35b6000816040516020016101c29190611140565b604051602081830303815290604052805190602001206000846040516101e89190611140565b90815260200160405180910390206003016040516020016102099190611157565b6040516020818303038152906040528051906020012014905092915050565b6001818154811061023857600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61026f610c24565b600080836040516102809190611140565b90815260200160405180910390206040518060c00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820180546102ff90611475565b80601f016020809104026020016040519081016040528092919081815260200182805461032b90611475565b80156103785780601f1061034d57610100808354040283529160200191610378565b820191906000526020600020905b81548152906001019060200180831161035b57829003601f168201915b5050505050815260200160028201805461039190611475565b80601f01602080910402602001604051908101604052809291908181526020018280546103bd90611475565b801561040a5780601f106103df5761010080835404028352916020019161040a565b820191906000526020600020905b8154815290600101906020018083116103ed57829003601f168201915b5050505050815260200160038201805461042390611475565b80601f016020809104026020016040519081016040528092919081815260200182805461044f90611475565b801561049c5780601f106104715761010080835404028352916020019161049c565b820191906000526020600020905b81548152906001019060200180831161047f57829003601f168201915b505050505081526020016004820180546104b590611475565b80601f01602080910402602001604051908101604052809291908181526020018280546104e190611475565b801561052e5780601f106105035761010080835404028352916020019161052e565b820191906000526020600020905b81548152906001019060200180831161051157829003601f168201915b50505050508152602001600582015481525050905060006040518060c00160405280836000015173ffffffffffffffffffffffffffffffffffffffff168152602001836020015181526020018360400151815260200183606001518152602001836080015181526020016105a58460a00151610831565b81525090508092505050919050565b806000836040516105c59190611140565b908152602001604051809103902060040190805190602001906105e9929190610c70565b505050565b6000428460405160200161060392919061116e565b6040516020818303038152906040528051906020012060001c9050600061062982610831565b905060006040518060c001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018781526020018681526020016040518060400160405280600181526020017f3000000000000000000000000000000000000000000000000000000000000000815250815260200160008152509050806000836040516106b99190611140565b908152602001604051809103902060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101908051906020019061072a929190610c70565b506040820151816002019080519060200190610747929190610c70565b506060820151816003019080519060200190610764929190610c70565b506080820151816004019080519060200190610781929190610c70565b5060a082015181600501559050506001849080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f270ff4b111e5baa49283562af127cc5ea74e9d6c9efd5465578bd9223d5843f0826040516108219190611249565b60405180910390a1505050505050565b60606000821415610879576040518060400160405280600181526020017f3000000000000000000000000000000000000000000000000000000000000000815250905061098d565b600082905060005b600082146108ab578080610894906114d8565b915050600a826108a49190611386565b9150610881565b60008167ffffffffffffffff8111156108c7576108c6611618565b5b6040519080825280601f01601f1916602001820160405280156108f95781602001600182028036833780820191505090505b5090505b600085146109865760018261091291906113b7565b9150600a85610921919061152b565b603061092d9190611330565b60f81b818381518110610943576109426115e9565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8561097f9190611386565b94506108fd565b8093505050505b919050565b6000818051602081018201805184825260208301602085012081835280955050505050506000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010180546109f190611475565b80601f0160208091040260200160405190810160405280929190818152602001828054610a1d90611475565b8015610a6a5780601f10610a3f57610100808354040283529160200191610a6a565b820191906000526020600020905b815481529060010190602001808311610a4d57829003601f168201915b505050505090806002018054610a7f90611475565b80601f0160208091040260200160405190810160405280929190818152602001828054610aab90611475565b8015610af85780601f10610acd57610100808354040283529160200191610af8565b820191906000526020600020905b815481529060010190602001808311610adb57829003601f168201915b505050505090806003018054610b0d90611475565b80601f0160208091040260200160405190810160405280929190818152602001828054610b3990611475565b8015610b865780601f10610b5b57610100808354040283529160200191610b86565b820191906000526020600020905b815481529060010190602001808311610b6957829003601f168201915b505050505090806004018054610b9b90611475565b80601f0160208091040260200160405190810160405280929190818152602001828054610bc790611475565b8015610c145780601f10610be957610100808354040283529160200191610c14565b820191906000526020600020905b815481529060010190602001808311610bf757829003601f168201915b5050505050908060050154905086565b6040518060c00160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081526020016060815260200160608152602001606081525090565b828054610c7c90611475565b90600052602060002090601f016020900481019282610c9e5760008555610ce5565b82601f10610cb757805160ff1916838001178555610ce5565b82800160010185558215610ce5579182015b82811115610ce4578251825591602001919060010190610cc9565b5b509050610cf29190610cf6565b5090565b5b80821115610d0f576000816000905550600101610cf7565b5090565b6000610d26610d21846112b2565b61128d565b905082815260208101848484011115610d4257610d4161164c565b5b610d4d848285611433565b509392505050565b600081359050610d648161166c565b92915050565b600082601f830112610d7f57610d7e611647565b5b8135610d8f848260208601610d13565b91505092915050565b600081359050610da781611683565b92915050565b600060208284031215610dc357610dc2611656565b5b600082013567ffffffffffffffff811115610de157610de0611651565b5b610ded84828501610d6a565b91505092915050565b60008060408385031215610e0d57610e0c611656565b5b600083013567ffffffffffffffff811115610e2b57610e2a611651565b5b610e3785828601610d6a565b925050602083013567ffffffffffffffff811115610e5857610e57611651565b5b610e6485828601610d6a565b9150509250929050565b600080600060608486031215610e8757610e86611656565b5b600084013567ffffffffffffffff811115610ea557610ea4611651565b5b610eb186828701610d6a565b935050602084013567ffffffffffffffff811115610ed257610ed1611651565b5b610ede86828701610d6a565b9250506040610eef86828701610d55565b9150509250925092565b600060208284031215610f0f57610f0e611656565b5b6000610f1d84828501610d98565b91505092915050565b610f2f816113eb565b82525050565b610f3e816113eb565b82525050565b610f4d816113fd565b82525050565b6000610f5e826112f8565b610f688185611303565b9350610f78818560208601611442565b610f818161165b565b840191505092915050565b6000610f97826112f8565b610fa18185611314565b9350610fb1818560208601611442565b610fba8161165b565b840191505092915050565b6000610fd0826112f8565b610fda8185611325565b9350610fea818560208601611442565b80840191505092915050565b6000815461100381611475565b61100d8186611325565b9450600182166000811461102857600181146110395761106c565b60ff1983168652818601935061106c565b611042856112e3565b60005b8381101561106457815481890152600182019150602081019050611045565b838801955050505b50505092915050565b600060c08301600083015161108d6000860182610f26565b50602083015184820360208601526110a58282610f53565b915050604083015184820360408601526110bf8282610f53565b915050606083015184820360608601526110d98282610f53565b915050608083015184820360808601526110f38282610f53565b91505060a083015184820360a086015261110d8282610f53565b9150508091505092915050565b61112381611429565b82525050565b61113a61113582611429565b611521565b82525050565b600061114c8284610fc5565b915081905092915050565b60006111638284610ff6565b915081905092915050565b600061117a8285611129565b60208201915061118a8284610fc5565b91508190509392505050565b60006020820190506111ab6000830184610f35565b92915050565b600060c0820190506111c66000830189610f35565b81810360208301526111d88188610f8c565b905081810360408301526111ec8187610f8c565b905081810360608301526112008186610f8c565b905081810360808301526112148185610f8c565b905061122360a083018461111a565b979650505050505050565b60006020820190506112436000830184610f44565b92915050565b600060208201905081810360008301526112638184610f8c565b905092915050565b600060208201905081810360008301526112858184611075565b905092915050565b60006112976112a8565b90506112a382826114a7565b919050565b6000604051905090565b600067ffffffffffffffff8211156112cd576112cc611618565b5b6112d68261165b565b9050602081019050919050565b60008190508160005260206000209050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600061133b82611429565b915061134683611429565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561137b5761137a61155c565b5b828201905092915050565b600061139182611429565b915061139c83611429565b9250826113ac576113ab61158b565b5b828204905092915050565b60006113c282611429565b91506113cd83611429565b9250828210156113e0576113df61155c565b5b828203905092915050565b60006113f682611409565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015611460578082015181840152602081019050611445565b8381111561146f576000848401525b50505050565b6000600282049050600182168061148d57607f821691505b602082108114156114a1576114a06115ba565b5b50919050565b6114b08261165b565b810181811067ffffffffffffffff821117156114cf576114ce611618565b5b80604052505050565b60006114e382611429565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156115165761151561155c565b5b600182019050919050565b6000819050919050565b600061153682611429565b915061154183611429565b9250826115515761155061158b565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b611675816113eb565b811461168057600080fd5b50565b61168c81611429565b811461169757600080fd5b5056fea264697066735822122043d95cd6da96e3efad7958cd89f653ac864603f172f885bd4068cf2d8312157f64736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 32,
        "contract": "contracts/UserInfo.sol:UserInfo",
        "label": "userMap",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_string_memory_ptr,t_struct(User)14_storage)"
      },
      {
        "astId": 35,
        "contract": "contracts/UserInfo.sol:UserInfo",
        "label": "registeredUserAddresses",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_mapping(t_string_memory_ptr,t_struct(User)14_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct UserInfo.User)",
        "numberOfBytes": "32",
        "value": "t_struct(User)14_storage"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(User)14_storage": {
        "encoding": "inplace",
        "label": "struct UserInfo.User",
        "members": [
          {
            "astId": 3,
            "contract": "contracts/UserInfo.sol:UserInfo",
            "label": "userAddress",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 5,
            "contract": "contracts/UserInfo.sol:UserInfo",
            "label": "userId",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 7,
            "contract": "contracts/UserInfo.sol:UserInfo",
            "label": "userName",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 9,
            "contract": "contracts/UserInfo.sol:UserInfo",
            "label": "pwd",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 11,
            "contract": "contracts/UserInfo.sol:UserInfo",
            "label": "role",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage"
          },
          {
            "astId": 13,
            "contract": "contracts/UserInfo.sol:UserInfo",
            "label": "assert",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}