{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "userId",
          "type": "uint256"
        }
      ],
      "name": "UserRegistered",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_userId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_role",
          "type": "string"
        }
      ],
      "name": "changeUserRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_userName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_pwd",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_userAddress",
          "type": "address"
        }
      ],
      "name": "createUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRegisteredUserId",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_userId",
          "type": "uint256"
        }
      ],
      "name": "getUserInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "userAddress",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "userId",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "userName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "pwd",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "role",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "assert",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "userState",
              "type": "string"
            }
          ],
          "internalType": "struct UserInfo.ReturnUser",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_userId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_pwd",
          "type": "string"
        }
      ],
      "name": "loginUser",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "uint256ToString",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "userId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "userName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "pwd",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "role",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "assertUpdate",
          "type": "uint256"
        }
      ],
      "name": "updateUserInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "userMap",
      "outputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "userId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "userName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "pwd",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "role",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "assert",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "userState",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x612e5251345c056a271c92a8bab557c238b440079aad625b6780651f67d77852",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "1393799",
    "logsBloom": "0x
    "blockHash": "0x2fce065c9cf05cb84c5e24052bbd5835cf6637840cd7bcae63dd2663751779dc",
    "transactionHash": "0x612e5251345c056a271c92a8bab557c238b440079aad625b6780651f67d77852",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "1393799",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "09ad3a1579726c340cde1e937f7758f4",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"}],\"name\":\"UserRegistered\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_userId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_role\",\"type\":\"string\"}],\"name\":\"changeUserRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_userName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_pwd\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"createUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRegisteredUserId\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_userId\",\"type\":\"uint256\"}],\"name\":\"getUserInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"userId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"userName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"pwd\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"role\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"assert\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"userState\",\"type\":\"string\"}],\"internalType\":\"struct UserInfo.ReturnUser\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_userId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_pwd\",\"type\":\"string\"}],\"name\":\"loginUser\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"uint256ToString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"userName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"pwd\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"role\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"assertUpdate\",\"type\":\"uint256\"}],\"name\":\"updateUserInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userMap\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"userName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"pwd\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"role\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"assert\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"userState\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/UserInfo.sol\":\"UserInfo\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/UserInfo.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\ncontract UserInfo {\\n    // \\u5b9a\\u4e49\\u7528\\u6237\\u7ed3\\u6784\\u4f53\\n    struct User {\\n        address userAddress; // \\u7528\\u6237\\u94b1\\u5305\\u5730\\u5740\\n        uint256 userId; // \\u7528\\u6237ID\\n        string userName; // \\u7528\\u6237\\u540d\\n        string pwd; // \\u5bc6\\u7801\\n        string role; // \\u7528\\u6237\\u89d2\\u8272\\n        uint256 assert; // \\u7528\\u6237\\u8d44\\u4ea7\\n        uint256 userState; //\\u7528\\u6237\\u72b6\\u6001 1\\u5b58\\u5728 0\\u5220\\u9664\\n    }\\n\\n    struct ReturnUser {\\n        address userAddress; // \\u7528\\u6237\\u94b1\\u5305\\u5730\\u5740\\n        string userId; // \\u7528\\u6237ID\\n        string userName; // \\u7528\\u6237\\u540d\\n        string pwd; // \\u5bc6\\u7801\\n        string role; // \\u7528\\u6237\\u89d2\\u8272\\n        string assert; // \\u7528\\u6237\\u8d44\\u4ea7\\n        string userState; //\\u7528\\u6237\\u72b6\\u6001\\n    }\\n    // \\u7528\\u6237ID\\u5230\\u7528\\u6237\\u7ed3\\u6784\\u4f53\\u7684\\u6620\\u5c04\\n    mapping(uint256 => User) public userMap;\\n    // event UserRegistered(string userId);\\n    event UserRegistered(uint256 userId);\\n\\n    // \\u5df2\\u6ce8\\u518c\\u7528\\n    uint256[] registeredUserId;\\n\\n    // \\u6dfb\\u52a0\\u7528\\u6237\\u51fd\\u6570\\n    function createUser(\\n        string memory _userName,\\n        string memory _pwd,\\n        address _userAddress //\\n    ) public {\\n        // \\u751f\\u6210\\u7528\\u6237ID\\uff08\\u4f7f\\u7528\\u7b80\\u5355\\u7684\\u4f2a\\u968f\\u673a\\u6570\\u751f\\u6210\\u51fd\\u6570\\uff09\\n        uint _userId = uint256(\\n            keccak256(abi.encodePacked(block.timestamp, _userName))\\n        );\\n        // string memory _userId = uint256ToString(userId);\\n        // \\u89e6\\u53d1\\u4e8b\\u4ef6\\n        User memory newUser = User(\\n            _userAddress,\\n            _userId,\\n            _userName,\\n            _pwd,\\n            // \\u666e\\u901a\\u7528\\u6237roleID\\u662f\\u201c0\\u201d\\n            \\\"0\\\",\\n            0,\\n            1\\n        );\\n        userMap[_userId] = newUser;\\n        registeredUserId.push(_userId);\\n        emit UserRegistered(_userId);\\n    }\\n\\n    // \\u7528\\u6237\\u767b\\u5f55\\u51fd\\u6570\\n    function loginUser(\\n        uint256 _userId,\\n        string memory _pwd\\n    ) public view returns (bool) {\\n        return\\n            keccak256(abi.encodePacked(userMap[_userId].pwd)) ==\\n            keccak256(abi.encodePacked(_pwd));\\n    }\\n\\n    // \\u67e5\\u8be2\\u7528\\u6237\\u4fe1\\u606f\\u51fd\\u6570\\n    function getUserInfo(\\n        uint256 _userId\\n    ) public view returns (ReturnUser memory) {\\n        User memory user = userMap[_userId];\\n        ReturnUser memory returnUser = ReturnUser(\\n            user.userAddress,\\n            uint256ToString(user.userId),\\n            user.userName,\\n            user.pwd,\\n            user.role,\\n            uint256ToString(user.assert),\\n            uint256ToString(user.userState)\\n        );\\n        return returnUser;\\n    }\\n\\n    // \\u66f4\\u6539\\u7528\\u6237\\u89d2\\u8272\\u51fd\\u6570\\n    function changeUserRole(uint256 _userId, string memory _role) public {\\n        userMap[_userId].role = _role;\\n    }\\n\\n    function updateUserInfo(\\n        address userAddress, // \\u7528\\u6237\\u94b1\\u5305\\u5730\\u5740\\n        uint256 userId, // \\u7528\\u6237ID\\n        string memory userName, // \\u7528\\u6237\\u540d\\n        string memory pwd, // \\u5bc6\\u7801\\n        string memory role,\\n        uint256 assertUpdate\\n    ) public {\\n        User memory newUser = User(\\n            userAddress,\\n            userId,\\n            userName,\\n            pwd,\\n            // \\u666e\\u901a\\u7528\\u6237roleID\\u662f\\u201c0\\u201d\\n            role,\\n            assertUpdate,\\n            userMap[userId].userState\\n        );\\n        userMap[userId] = newUser;\\n    }\\n\\n    function getRegisteredUserId() public view returns (uint256[] memory) {\\n        return registeredUserId;\\n    }\\n\\n    // \\u5c06 uint256 \\u7c7b\\u578b\\u8f6c\\u6362\\u4e3a\\u5b57\\u7b26\\u4e32\\n    function uint256ToString(\\n        uint256 value\\n    ) public pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + (value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n}\\n\",\"keccak256\":\"0xc91265a6c356f336e5dc799eb449b26bd7def6632b92e42e411e2bcc6f14147f\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061184b806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063be8c22511161005b578063be8c225114610111578063ce7e51e314610147578063d379dadf14610177578063d712bcb2146101a757610088565b806306bda8521461008d5780630ab468c0146100a9578063b2cb7a59146100c5578063b5ca2541146100f5575b600080fd5b6100a760048036038101906100a29190610f44565b6101c5565b005b6100c360048036038101906100be9190610dab565b6101f3565b005b6100df60048036038101906100da9190610f44565b610330565b6040516100ec9190611355565b60405180910390f35b61010f600480360381019061010a9190610e8c565b61039d565b005b61012b60048036038101906101269190610f17565b61058a565b60405161013e97969594939291906112af565b60405180910390f35b610161600480360381019061015c9190610f17565b610784565b60405161016e9190611370565b60405180910390f35b610191600480360381019061018c9190610f17565b6108e5565b60405161019e9190611392565b60405180910390f35b6101af610bc3565b6040516101bc9190611333565b60405180910390f35b8060008084815260200190815260200160002060040190805190602001906101ee929190610c1b565b505050565b60006040518060e001604052808873ffffffffffffffffffffffffffffffffffffffff1681526020018781526020018681526020018581526020018481526020018381526020016000808981526020019081526020016000206006015481525090508060008088815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020190805190602001906102d5929190610c1b565b5060608201518160030190805190602001906102f2929190610c1b565b50608082015181600401908051906020019061030f929190610c1b565b5060a0820151816005015560c0820151816006015590505050505050505050565b6000816040516020016103439190611259565b6040516020818303038152906040528051906020012060008085815260200190815260200160002060030160405160200161037e9190611270565b6040516020818303038152906040528051906020012014905092915050565b600042846040516020016103b2929190611287565b6040516020818303038152906040528051906020012060001c905060006040518060e001604052808473ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018681526020018581526020016040518060400160405280600181526020017f3000000000000000000000000000000000000000000000000000000000000000815250815260200160008152602001600181525090508060008084815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020190805190602001906104d1929190610c1b565b5060608201518160030190805190602001906104ee929190610c1b565b50608082015181600401908051906020019061050b929190610c1b565b5060a0820151816005015560c0820151816006015590505060018290806001815401808255809150506001900390600052602060002001600090919091909150557f6b1da47e6cb6a4952c75fff4300f06caf20aa8269a4a398f315562926c5bed398260405161057b91906113b4565b60405180910390a15050505050565b60006020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020180546105d9906115f0565b80601f0160208091040260200160405190810160405280929190818152602001828054610605906115f0565b80156106525780601f1061062757610100808354040283529160200191610652565b820191906000526020600020905b81548152906001019060200180831161063557829003601f168201915b505050505090806003018054610667906115f0565b80601f0160208091040260200160405190810160405280929190818152602001828054610693906115f0565b80156106e05780601f106106b5576101008083540402835291602001916106e0565b820191906000526020600020905b8154815290600101906020018083116106c357829003601f168201915b5050505050908060040180546106f5906115f0565b80601f0160208091040260200160405190810160405280929190818152602001828054610721906115f0565b801561076e5780601f106107435761010080835404028352916020019161076e565b820191906000526020600020905b81548152906001019060200180831161075157829003601f168201915b5050505050908060050154908060060154905087565b606060008214156107cc576040518060400160405280600181526020017f300000000000000000000000000000000000000000000000000000000000000081525090506108e0565b600082905060005b600082146107fe5780806107e790611653565b915050600a826107f79190611501565b91506107d4565b60008167ffffffffffffffff81111561081a57610819611793565b5b6040519080825280601f01601f19166020018201604052801561084c5781602001600182028036833780820191505090505b5090505b600085146108d9576001826108659190611532565b9150600a8561087491906116a6565b603061088091906114ab565b60f81b81838151811061089657610895611764565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a856108d29190611501565b9450610850565b8093505050505b919050565b6108ed610ca1565b60008060008481526020019081526020016000206040518060e00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201805461097c906115f0565b80601f01602080910402602001604051908101604052809291908181526020018280546109a8906115f0565b80156109f55780601f106109ca576101008083540402835291602001916109f5565b820191906000526020600020905b8154815290600101906020018083116109d857829003601f168201915b50505050508152602001600382018054610a0e906115f0565b80601f0160208091040260200160405190810160405280929190818152602001828054610a3a906115f0565b8015610a875780601f10610a5c57610100808354040283529160200191610a87565b820191906000526020600020905b815481529060010190602001808311610a6a57829003601f168201915b50505050508152602001600482018054610aa0906115f0565b80601f0160208091040260200160405190810160405280929190818152602001828054610acc906115f0565b8015610b195780601f10610aee57610100808354040283529160200191610b19565b820191906000526020600020905b815481529060010190602001808311610afc57829003601f168201915b5050505050815260200160058201548152602001600682015481525050905060006040518060e00160405280836000015173ffffffffffffffffffffffffffffffffffffffff168152602001610b728460200151610784565b8152602001836040015181526020018360600151815260200183608001518152602001610ba28460a00151610784565b8152602001610bb48460c00151610784565b81525090508092505050919050565b60606001805480602002602001604051908101604052809291908181526020018280548015610c1157602002820191906000526020600020905b815481526020019060010190808311610bfd575b5050505050905090565b828054610c27906115f0565b90600052602060002090601f016020900481019282610c495760008555610c90565b82601f10610c6257805160ff1916838001178555610c90565b82800160010185558215610c90579182015b82811115610c8f578251825591602001919060010190610c74565b5b509050610c9d9190610cf4565b5090565b6040518060e00160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160608152602001606081526020016060815260200160608152602001606081525090565b5b80821115610d0d576000816000905550600101610cf5565b5090565b6000610d24610d1f846113f4565b6113cf565b905082815260208101848484011115610d4057610d3f6117c7565b5b610d4b8482856115ae565b509392505050565b600081359050610d62816117e7565b92915050565b600082601f830112610d7d57610d7c6117c2565b5b8135610d8d848260208601610d11565b91505092915050565b600081359050610da5816117fe565b92915050565b60008060008060008060c08789031215610dc857610dc76117d1565b5b6000610dd689828a01610d53565b9650506020610de789828a01610d96565b955050604087013567ffffffffffffffff811115610e0857610e076117cc565b5b610e1489828a01610d68565b945050606087013567ffffffffffffffff811115610e3557610e346117cc565b5b610e4189828a01610d68565b935050608087013567ffffffffffffffff811115610e6257610e616117cc565b5b610e6e89828a01610d68565b92505060a0610e7f89828a01610d96565b9150509295509295509295565b600080600060608486031215610ea557610ea46117d1565b5b600084013567ffffffffffffffff811115610ec357610ec26117cc565b5b610ecf86828701610d68565b935050602084013567ffffffffffffffff811115610ef057610eef6117cc565b5b610efc86828701610d68565b9250506040610f0d86828701610d53565b9150509250925092565b600060208284031215610f2d57610f2c6117d1565b5b6000610f3b84828501610d96565b91505092915050565b60008060408385031215610f5b57610f5a6117d1565b5b6000610f6985828601610d96565b925050602083013567ffffffffffffffff811115610f8a57610f896117cc565b5b610f9685828601610d68565b9150509250929050565b6000610fac8383611224565b60208301905092915050565b610fc181611566565b82525050565b610fd081611566565b82525050565b6000610fe18261144a565b610feb818561146d565b9350610ff683611425565b8060005b8381101561102757815161100e8882610fa0565b975061101983611460565b925050600181019050610ffa565b5085935050505092915050565b61103d81611578565b82525050565b600061104e82611455565b611058818561147e565b93506110688185602086016115bd565b611071816117d6565b840191505092915050565b600061108782611455565b611091818561148f565b93506110a18185602086016115bd565b6110aa816117d6565b840191505092915050565b60006110c082611455565b6110ca81856114a0565b93506110da8185602086016115bd565b80840191505092915050565b600081546110f3816115f0565b6110fd81866114a0565b9450600182166000811461111857600181146111295761115c565b60ff1983168652818601935061115c565b61113285611435565b60005b8381101561115457815481890152600182019150602081019050611135565b838801955050505b50505092915050565b600060e08301600083015161117d6000860182610fb8565b50602083015184820360208601526111958282611043565b915050604083015184820360408601526111af8282611043565b915050606083015184820360608601526111c98282611043565b915050608083015184820360808601526111e38282611043565b91505060a083015184820360a08601526111fd8282611043565b91505060c083015184820360c08601526112178282611043565b9150508091505092915050565b61122d816115a4565b82525050565b61123c816115a4565b82525050565b61125361124e826115a4565b61169c565b82525050565b600061126582846110b5565b915081905092915050565b600061127c82846110e6565b915081905092915050565b60006112938285611242565b6020820191506112a382846110b5565b91508190509392505050565b600060e0820190506112c4600083018a610fc7565b6112d16020830189611233565b81810360408301526112e3818861107c565b905081810360608301526112f7818761107c565b9050818103608083015261130b818661107c565b905061131a60a0830185611233565b61132760c0830184611233565b98975050505050505050565b6000602082019050818103600083015261134d8184610fd6565b905092915050565b600060208201905061136a6000830184611034565b92915050565b6000602082019050818103600083015261138a818461107c565b905092915050565b600060208201905081810360008301526113ac8184611165565b905092915050565b60006020820190506113c96000830184611233565b92915050565b60006113d96113ea565b90506113e58282611622565b919050565b6000604051905090565b600067ffffffffffffffff82111561140f5761140e611793565b5b611418826117d6565b9050602081019050919050565b6000819050602082019050919050565b60008190508160005260206000209050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b60006114b6826115a4565b91506114c1836115a4565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156114f6576114f56116d7565b5b828201905092915050565b600061150c826115a4565b9150611517836115a4565b92508261152757611526611706565b5b828204905092915050565b600061153d826115a4565b9150611548836115a4565b92508282101561155b5761155a6116d7565b5b828203905092915050565b600061157182611584565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156115db5780820151818401526020810190506115c0565b838111156115ea576000848401525b50505050565b6000600282049050600182168061160857607f821691505b6020821081141561161c5761161b611735565b5b50919050565b61162b826117d6565b810181811067ffffffffffffffff8211171561164a57611649611793565b5b80604052505050565b600061165e826115a4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611691576116906116d7565b5b600182019050919050565b6000819050919050565b60006116b1826115a4565b91506116bc836115a4565b9250826116cc576116cb611706565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b6117f081611566565b81146117fb57600080fd5b50565b611807816115a4565b811461181257600080fd5b5056fea2646970667358221220c2c420c9650c2023f4067e74311838e483d49b3856bf1fc621f9065445d1882e64736f6c63430008070033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c8063be8c22511161005b578063be8c225114610111578063ce7e51e314610147578063d379dadf14610177578063d712bcb2146101a757610088565b806306bda8521461008d5780630ab468c0146100a9578063b2cb7a59146100c5578063b5ca2541146100f5575b600080fd5b6100a760048036038101906100a29190610f44565b6101c5565b005b6100c360048036038101906100be9190610dab565b6101f3565b005b6100df60048036038101906100da9190610f44565b610330565b6040516100ec9190611355565b60405180910390f35b61010f600480360381019061010a9190610e8c565b61039d565b005b61012b60048036038101906101269190610f17565b61058a565b60405161013e97969594939291906112af565b60405180910390f35b610161600480360381019061015c9190610f17565b610784565b60405161016e9190611370565b60405180910390f35b610191600480360381019061018c9190610f17565b6108e5565b60405161019e9190611392565b60405180910390f35b6101af610bc3565b6040516101bc9190611333565b60405180910390f35b8060008084815260200190815260200160002060040190805190602001906101ee929190610c1b565b505050565b60006040518060e001604052808873ffffffffffffffffffffffffffffffffffffffff1681526020018781526020018681526020018581526020018481526020018381526020016000808981526020019081526020016000206006015481525090508060008088815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020190805190602001906102d5929190610c1b565b5060608201518160030190805190602001906102f2929190610c1b565b50608082015181600401908051906020019061030f929190610c1b565b5060a0820151816005015560c0820151816006015590505050505050505050565b6000816040516020016103439190611259565b6040516020818303038152906040528051906020012060008085815260200190815260200160002060030160405160200161037e9190611270565b6040516020818303038152906040528051906020012014905092915050565b600042846040516020016103b2929190611287565b6040516020818303038152906040528051906020012060001c905060006040518060e001604052808473ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018681526020018581526020016040518060400160405280600181526020017f3000000000000000000000000000000000000000000000000000000000000000815250815260200160008152602001600181525090508060008084815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020190805190602001906104d1929190610c1b565b5060608201518160030190805190602001906104ee929190610c1b565b50608082015181600401908051906020019061050b929190610c1b565b5060a0820151816005015560c0820151816006015590505060018290806001815401808255809150506001900390600052602060002001600090919091909150557f6b1da47e6cb6a4952c75fff4300f06caf20aa8269a4a398f315562926c5bed398260405161057b91906113b4565b60405180910390a15050505050565b60006020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020180546105d9906115f0565b80601f0160208091040260200160405190810160405280929190818152602001828054610605906115f0565b80156106525780601f1061062757610100808354040283529160200191610652565b820191906000526020600020905b81548152906001019060200180831161063557829003601f168201915b505050505090806003018054610667906115f0565b80601f0160208091040260200160405190810160405280929190818152602001828054610693906115f0565b80156106e05780601f106106b5576101008083540402835291602001916106e0565b820191906000526020600020905b8154815290600101906020018083116106c357829003601f168201915b5050505050908060040180546106f5906115f0565b80601f0160208091040260200160405190810160405280929190818152602001828054610721906115f0565b801561076e5780601f106107435761010080835404028352916020019161076e565b820191906000526020600020905b81548152906001019060200180831161075157829003601f168201915b5050505050908060050154908060060154905087565b606060008214156107cc576040518060400160405280600181526020017f300000000000000000000000000000000000000000000000000000000000000081525090506108e0565b600082905060005b600082146107fe5780806107e790611653565b915050600a826107f79190611501565b91506107d4565b60008167ffffffffffffffff81111561081a57610819611793565b5b6040519080825280601f01601f19166020018201604052801561084c5781602001600182028036833780820191505090505b5090505b600085146108d9576001826108659190611532565b9150600a8561087491906116a6565b603061088091906114ab565b60f81b81838151811061089657610895611764565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a856108d29190611501565b9450610850565b8093505050505b919050565b6108ed610ca1565b60008060008481526020019081526020016000206040518060e00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201805461097c906115f0565b80601f01602080910402602001604051908101604052809291908181526020018280546109a8906115f0565b80156109f55780601f106109ca576101008083540402835291602001916109f5565b820191906000526020600020905b8154815290600101906020018083116109d857829003601f168201915b50505050508152602001600382018054610a0e906115f0565b80601f0160208091040260200160405190810160405280929190818152602001828054610a3a906115f0565b8015610a875780601f10610a5c57610100808354040283529160200191610a87565b820191906000526020600020905b815481529060010190602001808311610a6a57829003601f168201915b50505050508152602001600482018054610aa0906115f0565b80601f0160208091040260200160405190810160405280929190818152602001828054610acc906115f0565b8015610b195780601f10610aee57610100808354040283529160200191610b19565b820191906000526020600020905b815481529060010190602001808311610afc57829003601f168201915b5050505050815260200160058201548152602001600682015481525050905060006040518060e00160405280836000015173ffffffffffffffffffffffffffffffffffffffff168152602001610b728460200151610784565b8152602001836040015181526020018360600151815260200183608001518152602001610ba28460a00151610784565b8152602001610bb48460c00151610784565b81525090508092505050919050565b60606001805480602002602001604051908101604052809291908181526020018280548015610c1157602002820191906000526020600020905b815481526020019060010190808311610bfd575b5050505050905090565b828054610c27906115f0565b90600052602060002090601f016020900481019282610c495760008555610c90565b82601f10610c6257805160ff1916838001178555610c90565b82800160010185558215610c90579182015b82811115610c8f578251825591602001919060010190610c74565b5b509050610c9d9190610cf4565b5090565b6040518060e00160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160608152602001606081526020016060815260200160608152602001606081525090565b5b80821115610d0d576000816000905550600101610cf5565b5090565b6000610d24610d1f846113f4565b6113cf565b905082815260208101848484011115610d4057610d3f6117c7565b5b610d4b8482856115ae565b509392505050565b600081359050610d62816117e7565b92915050565b600082601f830112610d7d57610d7c6117c2565b5b8135610d8d848260208601610d11565b91505092915050565b600081359050610da5816117fe565b92915050565b60008060008060008060c08789031215610dc857610dc76117d1565b5b6000610dd689828a01610d53565b9650506020610de789828a01610d96565b955050604087013567ffffffffffffffff811115610e0857610e076117cc565b5b610e1489828a01610d68565b945050606087013567ffffffffffffffff811115610e3557610e346117cc565b5b610e4189828a01610d68565b935050608087013567ffffffffffffffff811115610e6257610e616117cc565b5b610e6e89828a01610d68565b92505060a0610e7f89828a01610d96565b9150509295509295509295565b600080600060608486031215610ea557610ea46117d1565b5b600084013567ffffffffffffffff811115610ec357610ec26117cc565b5b610ecf86828701610d68565b935050602084013567ffffffffffffffff811115610ef057610eef6117cc565b5b610efc86828701610d68565b9250506040610f0d86828701610d53565b9150509250925092565b600060208284031215610f2d57610f2c6117d1565b5b6000610f3b84828501610d96565b91505092915050565b60008060408385031215610f5b57610f5a6117d1565b5b6000610f6985828601610d96565b925050602083013567ffffffffffffffff811115610f8a57610f896117cc565b5b610f9685828601610d68565b9150509250929050565b6000610fac8383611224565b60208301905092915050565b610fc181611566565b82525050565b610fd081611566565b82525050565b6000610fe18261144a565b610feb818561146d565b9350610ff683611425565b8060005b8381101561102757815161100e8882610fa0565b975061101983611460565b925050600181019050610ffa565b5085935050505092915050565b61103d81611578565b82525050565b600061104e82611455565b611058818561147e565b93506110688185602086016115bd565b611071816117d6565b840191505092915050565b600061108782611455565b611091818561148f565b93506110a18185602086016115bd565b6110aa816117d6565b840191505092915050565b60006110c082611455565b6110ca81856114a0565b93506110da8185602086016115bd565b80840191505092915050565b600081546110f3816115f0565b6110fd81866114a0565b9450600182166000811461111857600181146111295761115c565b60ff1983168652818601935061115c565b61113285611435565b60005b8381101561115457815481890152600182019150602081019050611135565b838801955050505b50505092915050565b600060e08301600083015161117d6000860182610fb8565b50602083015184820360208601526111958282611043565b915050604083015184820360408601526111af8282611043565b915050606083015184820360608601526111c98282611043565b915050608083015184820360808601526111e38282611043565b91505060a083015184820360a08601526111fd8282611043565b91505060c083015184820360c08601526112178282611043565b9150508091505092915050565b61122d816115a4565b82525050565b61123c816115a4565b82525050565b61125361124e826115a4565b61169c565b82525050565b600061126582846110b5565b915081905092915050565b600061127c82846110e6565b915081905092915050565b60006112938285611242565b6020820191506112a382846110b5565b91508190509392505050565b600060e0820190506112c4600083018a610fc7565b6112d16020830189611233565b81810360408301526112e3818861107c565b905081810360608301526112f7818761107c565b9050818103608083015261130b818661107c565b905061131a60a0830185611233565b61132760c0830184611233565b98975050505050505050565b6000602082019050818103600083015261134d8184610fd6565b905092915050565b600060208201905061136a6000830184611034565b92915050565b6000602082019050818103600083015261138a818461107c565b905092915050565b600060208201905081810360008301526113ac8184611165565b905092915050565b60006020820190506113c96000830184611233565b92915050565b60006113d96113ea565b90506113e58282611622565b919050565b6000604051905090565b600067ffffffffffffffff82111561140f5761140e611793565b5b611418826117d6565b9050602081019050919050565b6000819050602082019050919050565b60008190508160005260206000209050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b60006114b6826115a4565b91506114c1836115a4565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156114f6576114f56116d7565b5b828201905092915050565b600061150c826115a4565b9150611517836115a4565b92508261152757611526611706565b5b828204905092915050565b600061153d826115a4565b9150611548836115a4565b92508282101561155b5761155a6116d7565b5b828203905092915050565b600061157182611584565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156115db5780820151818401526020810190506115c0565b838111156115ea576000848401525b50505050565b6000600282049050600182168061160857607f821691505b6020821081141561161c5761161b611735565b5b50919050565b61162b826117d6565b810181811067ffffffffffffffff8211171561164a57611649611793565b5b80604052505050565b600061165e826115a4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611691576116906116d7565b5b600182019050919050565b6000819050919050565b60006116b1826115a4565b91506116bc836115a4565b9250826116cc576116cb611706565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b6117f081611566565b81146117fb57600080fd5b50565b611807816115a4565b811461181257600080fd5b5056fea2646970667358221220c2c420c9650c2023f4067e74311838e483d49b3856bf1fc621f9065445d1882e64736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 2088,
        "contract": "contracts/UserInfo.sol:UserInfo",
        "label": "userMap",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_uint256,t_struct(User)2068_storage)"
      },
      {
        "astId": 2095,
        "contract": "contracts/UserInfo.sol:UserInfo",
        "label": "registeredUserId",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_mapping(t_uint256,t_struct(User)2068_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct UserInfo.User)",
        "numberOfBytes": "32",
        "value": "t_struct(User)2068_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(User)2068_storage": {
        "encoding": "inplace",
        "label": "struct UserInfo.User",
        "members": [
          {
            "astId": 2055,
            "contract": "contracts/UserInfo.sol:UserInfo",
            "label": "userAddress",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 2057,
            "contract": "contracts/UserInfo.sol:UserInfo",
            "label": "userId",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 2059,
            "contract": "contracts/UserInfo.sol:UserInfo",
            "label": "userName",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 2061,
            "contract": "contracts/UserInfo.sol:UserInfo",
            "label": "pwd",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 2063,
            "contract": "contracts/UserInfo.sol:UserInfo",
            "label": "role",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage"
          },
          {
            "astId": 2065,
            "contract": "contracts/UserInfo.sol:UserInfo",
            "label": "assert",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 2067,
            "contract": "contracts/UserInfo.sol:UserInfo",
            "label": "userState",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}