{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "userId",
          "type": "uint256"
        }
      ],
      "name": "UserRegistered",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_userId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_role",
          "type": "string"
        }
      ],
      "name": "changeUserRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_userName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_pwd",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_userAddress",
          "type": "address"
        }
      ],
      "name": "createUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_userId",
          "type": "uint256"
        }
      ],
      "name": "getUserInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "userAddress",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "userId",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "userName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "pwd",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "role",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "assert",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "userState",
              "type": "string"
            }
          ],
          "internalType": "struct UserInfo.ReturnUser",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_userId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_pwd",
          "type": "string"
        }
      ],
      "name": "loginUser",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "registeredUserAddresses",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "uint256ToString",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "userId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "userName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "pwd",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "role",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "assertUpdate",
          "type": "uint256"
        }
      ],
      "name": "updateUserInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "userMap",
      "outputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "userId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "userName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "pwd",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "role",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "assert",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "userState",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xfb01300b57cdd95aff9a5bacf30cc43a84e8673a83d74155a780dbbaa3e692cc",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "1362159",
    "logsBloom": "0x
    "blockHash": "0x6a075fceff6452eae9691aaa19f85fe8e6734ff9468f876f03864bf8c7174b5a",
    "transactionHash": "0xfb01300b57cdd95aff9a5bacf30cc43a84e8673a83d74155a780dbbaa3e692cc",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "1362159",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "68a6cb97a50941cc55aa6107d7bee1a0",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"}],\"name\":\"UserRegistered\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_userId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_role\",\"type\":\"string\"}],\"name\":\"changeUserRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_userName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_pwd\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"createUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_userId\",\"type\":\"uint256\"}],\"name\":\"getUserInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"userId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"userName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"pwd\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"role\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"assert\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"userState\",\"type\":\"string\"}],\"internalType\":\"struct UserInfo.ReturnUser\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_userId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_pwd\",\"type\":\"string\"}],\"name\":\"loginUser\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"registeredUserAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"uint256ToString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"userName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"pwd\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"role\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"assertUpdate\",\"type\":\"uint256\"}],\"name\":\"updateUserInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userMap\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"userName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"pwd\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"role\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"assert\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"userState\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/UserInfo.sol\":\"UserInfo\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/UserInfo.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\ncontract UserInfo {\\n    // \\u5b9a\\u4e49\\u7528\\u6237\\u7ed3\\u6784\\u4f53\\n    struct User {\\n        address userAddress; // \\u7528\\u6237\\u94b1\\u5305\\u5730\\u5740\\n        uint256 userId; // \\u7528\\u6237ID\\n        string userName; // \\u7528\\u6237\\u540d\\n        string pwd; // \\u5bc6\\u7801\\n        string role; // \\u7528\\u6237\\u89d2\\u8272\\n        uint256 assert; // \\u7528\\u6237\\u8d44\\u4ea7\\n        uint256 userState; //\\u7528\\u6237\\u72b6\\u6001 1\\u5b58\\u5728 0\\u5220\\u9664\\n    }\\n\\n    struct ReturnUser {\\n        address userAddress; // \\u7528\\u6237\\u94b1\\u5305\\u5730\\u5740\\n        string userId; // \\u7528\\u6237ID\\n        string userName; // \\u7528\\u6237\\u540d\\n        string pwd; // \\u5bc6\\u7801\\n        string role; // \\u7528\\u6237\\u89d2\\u8272\\n        string assert; // \\u7528\\u6237\\u8d44\\u4ea7\\n        string userState; //\\u7528\\u6237\\u72b6\\u6001\\n    }\\n    // \\u7528\\u6237ID\\u5230\\u7528\\u6237\\u7ed3\\u6784\\u4f53\\u7684\\u6620\\u5c04\\n    mapping(uint256 => User) public userMap;\\n    // \\u5df2\\u6ce8\\u518c\\u7528\\u6237\\u5730\\u5740\\n    address[] public registeredUserAddresses;\\n\\n    // event UserRegistered(string userId);\\n    event UserRegistered(uint256 userId);\\n\\n    // \\u6dfb\\u52a0\\u7528\\u6237\\u51fd\\u6570\\n    function createUser(\\n        string memory _userName,\\n        string memory _pwd,\\n        address _userAddress //\\n    ) public {\\n        // \\u751f\\u6210\\u7528\\u6237ID\\uff08\\u4f7f\\u7528\\u7b80\\u5355\\u7684\\u4f2a\\u968f\\u673a\\u6570\\u751f\\u6210\\u51fd\\u6570\\uff09\\n        uint _userId = uint256(\\n            keccak256(abi.encodePacked(block.timestamp, _userName))\\n        );\\n        // string memory _userId = uint256ToString(userId);\\n        // \\u89e6\\u53d1\\u4e8b\\u4ef6\\n        User memory newUser = User(\\n            _userAddress,\\n            _userId,\\n            _userName,\\n            _pwd,\\n            // \\u666e\\u901a\\u7528\\u6237roleID\\u662f\\u201c0\\u201d\\n            \\\"0\\\",\\n            0,\\n            1\\n        );\\n        userMap[_userId] = newUser;\\n        registeredUserAddresses.push(_userAddress);\\n        emit UserRegistered(_userId);\\n    }\\n\\n    // \\u7528\\u6237\\u767b\\u5f55\\u51fd\\u6570\\n    function loginUser(\\n        uint256 _userId,\\n        string memory _pwd\\n    ) public view returns (bool) {\\n        return\\n            keccak256(abi.encodePacked(userMap[_userId].pwd)) ==\\n            keccak256(abi.encodePacked(_pwd));\\n    }\\n\\n    // \\u67e5\\u8be2\\u7528\\u6237\\u4fe1\\u606f\\u51fd\\u6570\\n    function getUserInfo(\\n        uint256 _userId\\n    ) public view returns (ReturnUser memory) {\\n        User memory user = userMap[_userId];\\n        ReturnUser memory returnUser = ReturnUser(\\n            user.userAddress,\\n            uint256ToString(user.userId),\\n            user.userName,\\n            user.pwd,\\n            user.role,\\n            uint256ToString(user.assert),\\n            uint256ToString(user.userState)\\n        );\\n        return returnUser;\\n    }\\n\\n    // \\u66f4\\u6539\\u7528\\u6237\\u89d2\\u8272\\u51fd\\u6570\\n    function changeUserRole(uint256 _userId, string memory _role) public {\\n        userMap[_userId].role = _role;\\n    }\\n\\n    function updateUserInfo(\\n        address userAddress, // \\u7528\\u6237\\u94b1\\u5305\\u5730\\u5740\\n        uint256 userId, // \\u7528\\u6237ID\\n        string memory userName, // \\u7528\\u6237\\u540d\\n        string memory pwd, // \\u5bc6\\u7801\\n        string memory role,\\n        uint256 assertUpdate\\n    ) public {\\n        User memory newUser = User(\\n            userAddress,\\n            userId,\\n            userName,\\n            pwd,\\n            // \\u666e\\u901a\\u7528\\u6237roleID\\u662f\\u201c0\\u201d\\n            role,\\n            assertUpdate,\\n            userMap[userId].userState\\n        );\\n        userMap[userId] = newUser;\\n    }\\n\\n    // \\u5c06 uint256 \\u7c7b\\u578b\\u8f6c\\u6362\\u4e3a\\u5b57\\u7b26\\u4e32\\n    function uint256ToString(\\n        uint256 value\\n    ) public pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + (value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n}\\n\",\"keccak256\":\"0xfa208163e776aa482e32c15a4f12cc2b50c7968752803e79307f195fe0943f44\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506117b9806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063b5ca25411161005b578063b5ca254114610125578063be8c225114610141578063ce7e51e314610177578063d379dadf146101a757610088565b806306bda8521461008d5780630ab468c0146100a95780632365dce2146100c5578063b2cb7a59146100f5575b600080fd5b6100a760048036038101906100a29190610f77565b6101d7565b005b6100c360048036038101906100be9190610dde565b610205565b005b6100df60048036038101906100da9190610f4a565b610342565b6040516100ec919061125d565b60405180910390f35b61010f600480360381019061010a9190610f77565b610381565b60405161011c91906112fc565b60405180910390f35b61013f600480360381019061013a9190610ebf565b6103ee565b005b61015b60048036038101906101569190610f4a565b610615565b60405161016e9796959493929190611278565b60405180910390f35b610191600480360381019061018c9190610f4a565b61080f565b60405161019e9190611317565b60405180910390f35b6101c160048036038101906101bc9190610f4a565b610970565b6040516101ce9190611339565b60405180910390f35b806000808481526020019081526020016000206004019080519060200190610200929190610c4e565b505050565b60006040518060e001604052808873ffffffffffffffffffffffffffffffffffffffff1681526020018781526020018681526020018581526020018481526020018381526020016000808981526020019081526020016000206006015481525090508060008088815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020190805190602001906102e7929190610c4e565b506060820151816003019080519060200190610304929190610c4e565b506080820151816004019080519060200190610321929190610c4e565b5060a0820151816005015560c0820151816006015590505050505050505050565b6001818154811061035257600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000816040516020016103949190611207565b604051602081830303815290604052805190602001206000808581526020019081526020016000206003016040516020016103cf919061121e565b6040516020818303038152906040528051906020012014905092915050565b60004284604051602001610403929190611235565b6040516020818303038152906040528051906020012060001c905060006040518060e001604052808473ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018681526020018581526020016040518060400160405280600181526020017f3000000000000000000000000000000000000000000000000000000000000000815250815260200160008152602001600181525090508060008084815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002019080519060200190610522929190610c4e565b50606082015181600301908051906020019061053f929190610c4e565b50608082015181600401908051906020019061055c929190610c4e565b5060a0820151816005015560c082015181600601559050506001839080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f6b1da47e6cb6a4952c75fff4300f06caf20aa8269a4a398f315562926c5bed3982604051610606919061135b565b60405180910390a15050505050565b60006020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020180546106649061155e565b80601f01602080910402602001604051908101604052809291908181526020018280546106909061155e565b80156106dd5780601f106106b2576101008083540402835291602001916106dd565b820191906000526020600020905b8154815290600101906020018083116106c057829003601f168201915b5050505050908060030180546106f29061155e565b80601f016020809104026020016040519081016040528092919081815260200182805461071e9061155e565b801561076b5780601f106107405761010080835404028352916020019161076b565b820191906000526020600020905b81548152906001019060200180831161074e57829003601f168201915b5050505050908060040180546107809061155e565b80601f01602080910402602001604051908101604052809291908181526020018280546107ac9061155e565b80156107f95780601f106107ce576101008083540402835291602001916107f9565b820191906000526020600020905b8154815290600101906020018083116107dc57829003601f168201915b5050505050908060050154908060060154905087565b60606000821415610857576040518060400160405280600181526020017f3000000000000000000000000000000000000000000000000000000000000000815250905061096b565b600082905060005b60008214610889578080610872906115c1565b915050600a82610882919061146f565b915061085f565b60008167ffffffffffffffff8111156108a5576108a4611701565b5b6040519080825280601f01601f1916602001820160405280156108d75781602001600182028036833780820191505090505b5090505b60008514610964576001826108f091906114a0565b9150600a856108ff9190611614565b603061090b9190611419565b60f81b818381518110610921576109206116d2565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8561095d919061146f565b94506108db565b8093505050505b919050565b610978610cd4565b60008060008481526020019081526020016000206040518060e00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282018054610a079061155e565b80601f0160208091040260200160405190810160405280929190818152602001828054610a339061155e565b8015610a805780601f10610a5557610100808354040283529160200191610a80565b820191906000526020600020905b815481529060010190602001808311610a6357829003601f168201915b50505050508152602001600382018054610a999061155e565b80601f0160208091040260200160405190810160405280929190818152602001828054610ac59061155e565b8015610b125780601f10610ae757610100808354040283529160200191610b12565b820191906000526020600020905b815481529060010190602001808311610af557829003601f168201915b50505050508152602001600482018054610b2b9061155e565b80601f0160208091040260200160405190810160405280929190818152602001828054610b579061155e565b8015610ba45780601f10610b7957610100808354040283529160200191610ba4565b820191906000526020600020905b815481529060010190602001808311610b8757829003601f168201915b5050505050815260200160058201548152602001600682015481525050905060006040518060e00160405280836000015173ffffffffffffffffffffffffffffffffffffffff168152602001610bfd846020015161080f565b8152602001836040015181526020018360600151815260200183608001518152602001610c2d8460a0015161080f565b8152602001610c3f8460c0015161080f565b81525090508092505050919050565b828054610c5a9061155e565b90600052602060002090601f016020900481019282610c7c5760008555610cc3565b82601f10610c9557805160ff1916838001178555610cc3565b82800160010185558215610cc3579182015b82811115610cc2578251825591602001919060010190610ca7565b5b509050610cd09190610d27565b5090565b6040518060e00160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160608152602001606081526020016060815260200160608152602001606081525090565b5b80821115610d40576000816000905550600101610d28565b5090565b6000610d57610d528461139b565b611376565b905082815260208101848484011115610d7357610d72611735565b5b610d7e84828561151c565b509392505050565b600081359050610d9581611755565b92915050565b600082601f830112610db057610daf611730565b5b8135610dc0848260208601610d44565b91505092915050565b600081359050610dd88161176c565b92915050565b60008060008060008060c08789031215610dfb57610dfa61173f565b5b6000610e0989828a01610d86565b9650506020610e1a89828a01610dc9565b955050604087013567ffffffffffffffff811115610e3b57610e3a61173a565b5b610e4789828a01610d9b565b945050606087013567ffffffffffffffff811115610e6857610e6761173a565b5b610e7489828a01610d9b565b935050608087013567ffffffffffffffff811115610e9557610e9461173a565b5b610ea189828a01610d9b565b92505060a0610eb289828a01610dc9565b9150509295509295509295565b600080600060608486031215610ed857610ed761173f565b5b600084013567ffffffffffffffff811115610ef657610ef561173a565b5b610f0286828701610d9b565b935050602084013567ffffffffffffffff811115610f2357610f2261173a565b5b610f2f86828701610d9b565b9250506040610f4086828701610d86565b9150509250925092565b600060208284031215610f6057610f5f61173f565b5b6000610f6e84828501610dc9565b91505092915050565b60008060408385031215610f8e57610f8d61173f565b5b6000610f9c85828601610dc9565b925050602083013567ffffffffffffffff811115610fbd57610fbc61173a565b5b610fc985828601610d9b565b9150509250929050565b610fdc816114d4565b82525050565b610feb816114d4565b82525050565b610ffa816114e6565b82525050565b600061100b826113e1565b61101581856113ec565b935061102581856020860161152b565b61102e81611744565b840191505092915050565b6000611044826113e1565b61104e81856113fd565b935061105e81856020860161152b565b61106781611744565b840191505092915050565b600061107d826113e1565b611087818561140e565b935061109781856020860161152b565b80840191505092915050565b600081546110b08161155e565b6110ba818661140e565b945060018216600081146110d557600181146110e657611119565b60ff19831686528186019350611119565b6110ef856113cc565b60005b83811015611111578154818901526001820191506020810190506110f2565b838801955050505b50505092915050565b600060e08301600083015161113a6000860182610fd3565b50602083015184820360208601526111528282611000565b9150506040830151848203604086015261116c8282611000565b915050606083015184820360608601526111868282611000565b915050608083015184820360808601526111a08282611000565b91505060a083015184820360a08601526111ba8282611000565b91505060c083015184820360c08601526111d48282611000565b9150508091505092915050565b6111ea81611512565b82525050565b6112016111fc82611512565b61160a565b82525050565b60006112138284611072565b915081905092915050565b600061122a82846110a3565b915081905092915050565b600061124182856111f0565b6020820191506112518284611072565b91508190509392505050565b60006020820190506112726000830184610fe2565b92915050565b600060e08201905061128d600083018a610fe2565b61129a60208301896111e1565b81810360408301526112ac8188611039565b905081810360608301526112c08187611039565b905081810360808301526112d48186611039565b90506112e360a08301856111e1565b6112f060c08301846111e1565b98975050505050505050565b60006020820190506113116000830184610ff1565b92915050565b600060208201905081810360008301526113318184611039565b905092915050565b600060208201905081810360008301526113538184611122565b905092915050565b600060208201905061137060008301846111e1565b92915050565b6000611380611391565b905061138c8282611590565b919050565b6000604051905090565b600067ffffffffffffffff8211156113b6576113b5611701565b5b6113bf82611744565b9050602081019050919050565b60008190508160005260206000209050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600061142482611512565b915061142f83611512565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561146457611463611645565b5b828201905092915050565b600061147a82611512565b915061148583611512565b92508261149557611494611674565b5b828204905092915050565b60006114ab82611512565b91506114b683611512565b9250828210156114c9576114c8611645565b5b828203905092915050565b60006114df826114f2565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561154957808201518184015260208101905061152e565b83811115611558576000848401525b50505050565b6000600282049050600182168061157657607f821691505b6020821081141561158a576115896116a3565b5b50919050565b61159982611744565b810181811067ffffffffffffffff821117156115b8576115b7611701565b5b80604052505050565b60006115cc82611512565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156115ff576115fe611645565b5b600182019050919050565b6000819050919050565b600061161f82611512565b915061162a83611512565b92508261163a57611639611674565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b61175e816114d4565b811461176957600080fd5b50565b61177581611512565b811461178057600080fd5b5056fea2646970667358221220b5ec181b6c15494a2e23665651718d07fc3b95aa2f00d1dc5fb329738e15c0f564736f6c63430008070033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c8063b5ca25411161005b578063b5ca254114610125578063be8c225114610141578063ce7e51e314610177578063d379dadf146101a757610088565b806306bda8521461008d5780630ab468c0146100a95780632365dce2146100c5578063b2cb7a59146100f5575b600080fd5b6100a760048036038101906100a29190610f77565b6101d7565b005b6100c360048036038101906100be9190610dde565b610205565b005b6100df60048036038101906100da9190610f4a565b610342565b6040516100ec919061125d565b60405180910390f35b61010f600480360381019061010a9190610f77565b610381565b60405161011c91906112fc565b60405180910390f35b61013f600480360381019061013a9190610ebf565b6103ee565b005b61015b60048036038101906101569190610f4a565b610615565b60405161016e9796959493929190611278565b60405180910390f35b610191600480360381019061018c9190610f4a565b61080f565b60405161019e9190611317565b60405180910390f35b6101c160048036038101906101bc9190610f4a565b610970565b6040516101ce9190611339565b60405180910390f35b806000808481526020019081526020016000206004019080519060200190610200929190610c4e565b505050565b60006040518060e001604052808873ffffffffffffffffffffffffffffffffffffffff1681526020018781526020018681526020018581526020018481526020018381526020016000808981526020019081526020016000206006015481525090508060008088815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020190805190602001906102e7929190610c4e565b506060820151816003019080519060200190610304929190610c4e565b506080820151816004019080519060200190610321929190610c4e565b5060a0820151816005015560c0820151816006015590505050505050505050565b6001818154811061035257600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000816040516020016103949190611207565b604051602081830303815290604052805190602001206000808581526020019081526020016000206003016040516020016103cf919061121e565b6040516020818303038152906040528051906020012014905092915050565b60004284604051602001610403929190611235565b6040516020818303038152906040528051906020012060001c905060006040518060e001604052808473ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018681526020018581526020016040518060400160405280600181526020017f3000000000000000000000000000000000000000000000000000000000000000815250815260200160008152602001600181525090508060008084815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002019080519060200190610522929190610c4e565b50606082015181600301908051906020019061053f929190610c4e565b50608082015181600401908051906020019061055c929190610c4e565b5060a0820151816005015560c082015181600601559050506001839080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f6b1da47e6cb6a4952c75fff4300f06caf20aa8269a4a398f315562926c5bed3982604051610606919061135b565b60405180910390a15050505050565b60006020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020180546106649061155e565b80601f01602080910402602001604051908101604052809291908181526020018280546106909061155e565b80156106dd5780601f106106b2576101008083540402835291602001916106dd565b820191906000526020600020905b8154815290600101906020018083116106c057829003601f168201915b5050505050908060030180546106f29061155e565b80601f016020809104026020016040519081016040528092919081815260200182805461071e9061155e565b801561076b5780601f106107405761010080835404028352916020019161076b565b820191906000526020600020905b81548152906001019060200180831161074e57829003601f168201915b5050505050908060040180546107809061155e565b80601f01602080910402602001604051908101604052809291908181526020018280546107ac9061155e565b80156107f95780601f106107ce576101008083540402835291602001916107f9565b820191906000526020600020905b8154815290600101906020018083116107dc57829003601f168201915b5050505050908060050154908060060154905087565b60606000821415610857576040518060400160405280600181526020017f3000000000000000000000000000000000000000000000000000000000000000815250905061096b565b600082905060005b60008214610889578080610872906115c1565b915050600a82610882919061146f565b915061085f565b60008167ffffffffffffffff8111156108a5576108a4611701565b5b6040519080825280601f01601f1916602001820160405280156108d75781602001600182028036833780820191505090505b5090505b60008514610964576001826108f091906114a0565b9150600a856108ff9190611614565b603061090b9190611419565b60f81b818381518110610921576109206116d2565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8561095d919061146f565b94506108db565b8093505050505b919050565b610978610cd4565b60008060008481526020019081526020016000206040518060e00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282018054610a079061155e565b80601f0160208091040260200160405190810160405280929190818152602001828054610a339061155e565b8015610a805780601f10610a5557610100808354040283529160200191610a80565b820191906000526020600020905b815481529060010190602001808311610a6357829003601f168201915b50505050508152602001600382018054610a999061155e565b80601f0160208091040260200160405190810160405280929190818152602001828054610ac59061155e565b8015610b125780601f10610ae757610100808354040283529160200191610b12565b820191906000526020600020905b815481529060010190602001808311610af557829003601f168201915b50505050508152602001600482018054610b2b9061155e565b80601f0160208091040260200160405190810160405280929190818152602001828054610b579061155e565b8015610ba45780601f10610b7957610100808354040283529160200191610ba4565b820191906000526020600020905b815481529060010190602001808311610b8757829003601f168201915b5050505050815260200160058201548152602001600682015481525050905060006040518060e00160405280836000015173ffffffffffffffffffffffffffffffffffffffff168152602001610bfd846020015161080f565b8152602001836040015181526020018360600151815260200183608001518152602001610c2d8460a0015161080f565b8152602001610c3f8460c0015161080f565b81525090508092505050919050565b828054610c5a9061155e565b90600052602060002090601f016020900481019282610c7c5760008555610cc3565b82601f10610c9557805160ff1916838001178555610cc3565b82800160010185558215610cc3579182015b82811115610cc2578251825591602001919060010190610ca7565b5b509050610cd09190610d27565b5090565b6040518060e00160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160608152602001606081526020016060815260200160608152602001606081525090565b5b80821115610d40576000816000905550600101610d28565b5090565b6000610d57610d528461139b565b611376565b905082815260208101848484011115610d7357610d72611735565b5b610d7e84828561151c565b509392505050565b600081359050610d9581611755565b92915050565b600082601f830112610db057610daf611730565b5b8135610dc0848260208601610d44565b91505092915050565b600081359050610dd88161176c565b92915050565b60008060008060008060c08789031215610dfb57610dfa61173f565b5b6000610e0989828a01610d86565b9650506020610e1a89828a01610dc9565b955050604087013567ffffffffffffffff811115610e3b57610e3a61173a565b5b610e4789828a01610d9b565b945050606087013567ffffffffffffffff811115610e6857610e6761173a565b5b610e7489828a01610d9b565b935050608087013567ffffffffffffffff811115610e9557610e9461173a565b5b610ea189828a01610d9b565b92505060a0610eb289828a01610dc9565b9150509295509295509295565b600080600060608486031215610ed857610ed761173f565b5b600084013567ffffffffffffffff811115610ef657610ef561173a565b5b610f0286828701610d9b565b935050602084013567ffffffffffffffff811115610f2357610f2261173a565b5b610f2f86828701610d9b565b9250506040610f4086828701610d86565b9150509250925092565b600060208284031215610f6057610f5f61173f565b5b6000610f6e84828501610dc9565b91505092915050565b60008060408385031215610f8e57610f8d61173f565b5b6000610f9c85828601610dc9565b925050602083013567ffffffffffffffff811115610fbd57610fbc61173a565b5b610fc985828601610d9b565b9150509250929050565b610fdc816114d4565b82525050565b610feb816114d4565b82525050565b610ffa816114e6565b82525050565b600061100b826113e1565b61101581856113ec565b935061102581856020860161152b565b61102e81611744565b840191505092915050565b6000611044826113e1565b61104e81856113fd565b935061105e81856020860161152b565b61106781611744565b840191505092915050565b600061107d826113e1565b611087818561140e565b935061109781856020860161152b565b80840191505092915050565b600081546110b08161155e565b6110ba818661140e565b945060018216600081146110d557600181146110e657611119565b60ff19831686528186019350611119565b6110ef856113cc565b60005b83811015611111578154818901526001820191506020810190506110f2565b838801955050505b50505092915050565b600060e08301600083015161113a6000860182610fd3565b50602083015184820360208601526111528282611000565b9150506040830151848203604086015261116c8282611000565b915050606083015184820360608601526111868282611000565b915050608083015184820360808601526111a08282611000565b91505060a083015184820360a08601526111ba8282611000565b91505060c083015184820360c08601526111d48282611000565b9150508091505092915050565b6111ea81611512565b82525050565b6112016111fc82611512565b61160a565b82525050565b60006112138284611072565b915081905092915050565b600061122a82846110a3565b915081905092915050565b600061124182856111f0565b6020820191506112518284611072565b91508190509392505050565b60006020820190506112726000830184610fe2565b92915050565b600060e08201905061128d600083018a610fe2565b61129a60208301896111e1565b81810360408301526112ac8188611039565b905081810360608301526112c08187611039565b905081810360808301526112d48186611039565b90506112e360a08301856111e1565b6112f060c08301846111e1565b98975050505050505050565b60006020820190506113116000830184610ff1565b92915050565b600060208201905081810360008301526113318184611039565b905092915050565b600060208201905081810360008301526113538184611122565b905092915050565b600060208201905061137060008301846111e1565b92915050565b6000611380611391565b905061138c8282611590565b919050565b6000604051905090565b600067ffffffffffffffff8211156113b6576113b5611701565b5b6113bf82611744565b9050602081019050919050565b60008190508160005260206000209050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600061142482611512565b915061142f83611512565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561146457611463611645565b5b828201905092915050565b600061147a82611512565b915061148583611512565b92508261149557611494611674565b5b828204905092915050565b60006114ab82611512565b91506114b683611512565b9250828210156114c9576114c8611645565b5b828203905092915050565b60006114df826114f2565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561154957808201518184015260208101905061152e565b83811115611558576000848401525b50505050565b6000600282049050600182168061157657607f821691505b6020821081141561158a576115896116a3565b5b50919050565b61159982611744565b810181811067ffffffffffffffff821117156115b8576115b7611701565b5b80604052505050565b60006115cc82611512565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156115ff576115fe611645565b5b600182019050919050565b6000819050919050565b600061161f82611512565b915061162a83611512565b92508261163a57611639611674565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b61175e816114d4565b811461176957600080fd5b50565b61177581611512565b811461178057600080fd5b5056fea2646970667358221220b5ec181b6c15494a2e23665651718d07fc3b95aa2f00d1dc5fb329738e15c0f564736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 36,
        "contract": "contracts/UserInfo.sol:UserInfo",
        "label": "userMap",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_uint256,t_struct(User)16_storage)"
      },
      {
        "astId": 39,
        "contract": "contracts/UserInfo.sol:UserInfo",
        "label": "registeredUserAddresses",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_mapping(t_uint256,t_struct(User)16_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct UserInfo.User)",
        "numberOfBytes": "32",
        "value": "t_struct(User)16_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(User)16_storage": {
        "encoding": "inplace",
        "label": "struct UserInfo.User",
        "members": [
          {
            "astId": 3,
            "contract": "contracts/UserInfo.sol:UserInfo",
            "label": "userAddress",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 5,
            "contract": "contracts/UserInfo.sol:UserInfo",
            "label": "userId",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 7,
            "contract": "contracts/UserInfo.sol:UserInfo",
            "label": "userName",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 9,
            "contract": "contracts/UserInfo.sol:UserInfo",
            "label": "pwd",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 11,
            "contract": "contracts/UserInfo.sol:UserInfo",
            "label": "role",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage"
          },
          {
            "astId": 13,
            "contract": "contracts/UserInfo.sol:UserInfo",
            "label": "assert",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 15,
            "contract": "contracts/UserInfo.sol:UserInfo",
            "label": "userState",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}