(function (root, factory) {(typeof module === 'object' && module.exports) ? module.exports = factory() : root.ItByteStream = factory()}(typeof self !== 'undefined' ? self : this, function () {
"use strict";var ItByteStream=(()=>{var v=Object.defineProperty;var T=Object.getOwnPropertyDescriptor;var S=Object.getOwnPropertyNames;var E=Object.prototype.hasOwnProperty;var I=(s,t)=>{for(var e in t)v(s,e,{get:t[e],enumerable:!0})},P=(s,t,e,r)=>{if(t&&typeof t=="object"||typeof t=="function")for(let n of S(t))!E.call(s,n)&&n!==e&&v(s,n,{get:()=>t[n],enumerable:!(r=T(t,n))||r.enumerable});return s};var k=s=>P(v({},"__esModule",{value:!0}),s);var _={};I(_,{AbortError:()=>U,CodeError:()=>p,byteStream:()=>F});function c(s){return globalThis.Buffer!=null?new Uint8Array(s.buffer,s.byteOffset,s.byteLength):s}function b(s=0){return globalThis.Buffer?.alloc!=null?c(globalThis.Buffer.alloc(s)):new Uint8Array(s)}function g(s=0){return globalThis.Buffer?.allocUnsafe!=null?c(globalThis.Buffer.allocUnsafe(s)):new Uint8Array(s)}function x(s,t){if(globalThis.Buffer!=null)return c(globalThis.Buffer.concat(s,t));t==null&&(t=s.reduce((n,o)=>n+o.length,0));let e=g(t),r=0;for(let n of s)e.set(n,r),r+=n.length;return c(e)}function B(s,t){if(s===t)return!0;if(s.byteLength!==t.byteLength)return!1;for(let e=0;e<s.byteLength;e++)if(s[e]!==t[e])return!1;return!0}var N=Symbol.for("@achingbrain/uint8arraylist");function D(s,t){if(t==null||t<0)throw new RangeError("index is out of bounds");let e=0;for(let r of s){let n=e+r.byteLength;if(t<n)return{buf:r,index:t-e};e=n}throw new RangeError("index is out of bounds")}function m(s){return!!s?.[N]}var d=class s{bufs;length;[N]=!0;constructor(...t){this.bufs=[],this.length=0,t.length>0&&this.appendAll(t)}*[Symbol.iterator](){yield*this.bufs}get byteLength(){return this.length}append(...t){this.appendAll(t)}appendAll(t){let e=0;for(let r of t)if(r instanceof Uint8Array)e+=r.byteLength,this.bufs.push(r);else if(m(r))e+=r.byteLength,this.bufs.push(...r.bufs);else throw new Error("Could not append value, must be an Uint8Array or a Uint8ArrayList");this.length+=e}prepend(...t){this.prependAll(t)}prependAll(t){let e=0;for(let r of t.reverse())if(r instanceof Uint8Array)e+=r.byteLength,this.bufs.unshift(r);else if(m(r))e+=r.byteLength,this.bufs.unshift(...r.bufs);else throw new Error("Could not prepend value, must be an Uint8Array or a Uint8ArrayList");this.length+=e}get(t){let e=D(this.bufs,t);return e.buf[e.index]}set(t,e){let r=D(this.bufs,t);r.buf[r.index]=e}write(t,e=0){if(t instanceof Uint8Array)for(let r=0;r<t.length;r++)this.set(e+r,t[r]);else if(m(t))for(let r=0;r<t.length;r++)this.set(e+r,t.get(r));else throw new Error("Could not write value, must be an Uint8Array or a Uint8ArrayList")}consume(t){if(t=Math.trunc(t),!(Number.isNaN(t)||t<=0)){if(t===this.byteLength){this.bufs=[],this.length=0;return}for(;this.bufs.length>0;)if(t>=this.bufs[0].byteLength)t-=this.bufs[0].byteLength,this.length-=this.bufs[0].byteLength,this.bufs.shift();else{this.bufs[0]=this.bufs[0].subarray(t),this.length-=t;break}}}slice(t,e){let{bufs:r,length:n}=this._subList(t,e);return x(r,n)}subarray(t,e){let{bufs:r,length:n}=this._subList(t,e);return r.length===1?r[0]:x(r,n)}sublist(t,e){let{bufs:r,length:n}=this._subList(t,e),o=new s;return o.length=n,o.bufs=[...r],o}_subList(t,e){if(t=t??0,e=e??this.length,t<0&&(t=this.length+t),e<0&&(e=this.length+e),t<0||e>this.length)throw new RangeError("index is out of bounds");if(t===e)return{bufs:[],length:0};if(t===0&&e===this.length)return{bufs:this.bufs,length:this.length};let r=[],n=0;for(let o=0;o<this.bufs.length;o++){let i=this.bufs[o],u=n,f=u+i.byteLength;if(n=f,t>=f)continue;let w=t>=u&&t<f,h=e>u&&e<=f;if(w&&h){if(t===u&&e===f){r.push(i);break}let a=t-u;r.push(i.subarray(a,a+(e-t)));break}if(w){if(t===0){r.push(i);continue}r.push(i.subarray(t-u));continue}if(h){if(e===f){r.push(i);break}r.push(i.subarray(0,e-u));break}r.push(i)}return{bufs:r,length:e-t}}indexOf(t,e=0){if(!m(t)&&!(t instanceof Uint8Array))throw new TypeError('The "value" argument must be a Uint8ArrayList or Uint8Array');let r=t instanceof Uint8Array?t:t.subarray();if(e=Number(e??0),isNaN(e)&&(e=0),e<0&&(e=this.length+e),e<0&&(e=0),t.length===0)return e>this.length?this.length:e;let n=r.byteLength;if(n===0)throw new TypeError("search must be at least 1 byte long");let o=256,i=new Int32Array(o);for(let a=0;a<o;a++)i[a]=-1;for(let a=0;a<n;a++)i[r[a]]=a;let u=i,f=this.byteLength-r.byteLength,w=r.byteLength-1,h;for(let a=e;a<=f;a+=h){h=0;for(let l=w;l>=0;l--){let R=this.get(a+l);if(r[l]!==R){h=Math.max(1,l-u[R]);break}}if(h===0)return a}return-1}getInt8(t){let e=this.subarray(t,t+1);return new DataView(e.buffer,e.byteOffset,e.byteLength).getInt8(0)}setInt8(t,e){let r=g(1);new DataView(r.buffer,r.byteOffset,r.byteLength).setInt8(0,e),this.write(r,t)}getInt16(t,e){let r=this.subarray(t,t+2);return new DataView(r.buffer,r.byteOffset,r.byteLength).getInt16(0,e)}setInt16(t,e,r){let n=b(2);new DataView(n.buffer,n.byteOffset,n.byteLength).setInt16(0,e,r),this.write(n,t)}getInt32(t,e){let r=this.subarray(t,t+4);return new DataView(r.buffer,r.byteOffset,r.byteLength).getInt32(0,e)}setInt32(t,e,r){let n=b(4);new DataView(n.buffer,n.byteOffset,n.byteLength).setInt32(0,e,r),this.write(n,t)}getBigInt64(t,e){let r=this.subarray(t,t+8);return new DataView(r.buffer,r.byteOffset,r.byteLength).getBigInt64(0,e)}setBigInt64(t,e,r){let n=b(8);new DataView(n.buffer,n.byteOffset,n.byteLength).setBigInt64(0,e,r),this.write(n,t)}getUint8(t){let e=this.subarray(t,t+1);return new DataView(e.buffer,e.byteOffset,e.byteLength).getUint8(0)}setUint8(t,e){let r=g(1);new DataView(r.buffer,r.byteOffset,r.byteLength).setUint8(0,e),this.write(r,t)}getUint16(t,e){let r=this.subarray(t,t+2);return new DataView(r.buffer,r.byteOffset,r.byteLength).getUint16(0,e)}setUint16(t,e,r){let n=b(2);new DataView(n.buffer,n.byteOffset,n.byteLength).setUint16(0,e,r),this.write(n,t)}getUint32(t,e){let r=this.subarray(t,t+4);return new DataView(r.buffer,r.byteOffset,r.byteLength).getUint32(0,e)}setUint32(t,e,r){let n=b(4);new DataView(n.buffer,n.byteOffset,n.byteLength).setUint32(0,e,r),this.write(n,t)}getBigUint64(t,e){let r=this.subarray(t,t+8);return new DataView(r.buffer,r.byteOffset,r.byteLength).getBigUint64(0,e)}setBigUint64(t,e,r){let n=b(8);new DataView(n.buffer,n.byteOffset,n.byteLength).setBigUint64(0,e,r),this.write(n,t)}getFloat32(t,e){let r=this.subarray(t,t+4);return new DataView(r.buffer,r.byteOffset,r.byteLength).getFloat32(0,e)}setFloat32(t,e,r){let n=b(4);new DataView(n.buffer,n.byteOffset,n.byteLength).setFloat32(0,e,r),this.write(n,t)}getFloat64(t,e){let r=this.subarray(t,t+8);return new DataView(r.buffer,r.byteOffset,r.byteLength).getFloat64(0,e)}setFloat64(t,e,r){let n=b(8);new DataView(n.buffer,n.byteOffset,n.byteLength).setFloat64(0,e,r),this.write(n,t)}equals(t){if(t==null||!(t instanceof s)||t.bufs.length!==this.bufs.length)return!1;for(let e=0;e<this.bufs.length;e++)if(!B(this.bufs[e],t.bufs[e]))return!1;return!0}static fromUint8Arrays(t,e){let r=new s;return r.bufs=t,e==null&&(e=t.reduce((n,o)=>n+o.byteLength,0)),r.length=e,r}};function y(){let s={};return s.promise=new Promise((t,e)=>{s.resolve=t,s.reject=e}),s}var L=class extends Error{type;code;constructor(t,e){super(t??"The operation was aborted"),this.type="aborted",this.name="AbortError",this.code=e??"ABORT_ERR"}};async function V(s,t,e){if(t==null)return s;if(t.aborted)return Promise.reject(new L(e?.errorMessage,e?.errorCode));let r,n=new L(e?.errorMessage,e?.errorCode);try{return await Promise.race([s,new Promise((o,i)=>{r=()=>{i(n)},t.addEventListener("abort",r)})])}finally{r!=null&&t.removeEventListener("abort",r)}}var A=class{readNext;haveNext;ended;nextResult;constructor(){this.ended=!1,this.readNext=y(),this.haveNext=y()}[Symbol.asyncIterator](){return this}async next(){if(this.nextResult==null&&await this.haveNext.promise,this.nextResult==null)throw new Error("HaveNext promise resolved but nextResult was undefined");let t=this.nextResult;return this.nextResult=void 0,this.readNext.resolve(),this.readNext=y(),t}async throw(t){return this.ended=!0,t!=null&&this.haveNext.reject(t),{done:!0,value:void 0}}async return(){let t={done:!0,value:void 0};return await this._push(void 0),t}async push(t,e){await this._push(t,e)}async end(t,e){t!=null?await this.throw(t):await this._push(void 0,e)}async _push(t,e){if(t!=null&&this.ended)throw new Error("Cannot push value onto an ended pushable");if(this.nextResult!=null&&(await this.readNext.promise,this.nextResult!=null))throw new Error("NeedNext promise resolved but nextResult was not consumed");t!=null?this.nextResult={done:!1,value:t}:(this.ended=!0,this.nextResult={done:!0,value:void 0}),this.haveNext.resolve(),this.haveNext=y(),await V(this.readNext.promise,e?.signal,e)}};function O(){return new A}var p=class extends Error{code;constructor(t,e){super(t),this.code=e}},U=class extends p{type;constructor(t){super(t,"ABORT_ERR"),this.type="aborted"}};function F(s,t){let e=O();s.sink(e).catch(async i=>{await e.end(i)}),s.sink=async i=>{for await(let u of i)await e.push(u);await e.end()};let r=s.source;s.source[Symbol.iterator]!=null?r=s.source[Symbol.iterator]():s.source[Symbol.asyncIterator]!=null&&(r=s.source[Symbol.asyncIterator]());let n=new d;return{read:async(i,u)=>{u?.signal?.throwIfAborted();let f,w=new Promise((h,a)=>{f=()=>{a(new U("Read aborted"))},u?.signal?.addEventListener("abort",f)});try{if(i==null){let{done:a,value:l}=await Promise.race([r.next(),w]);return a===!0?new d:l}for(;n.byteLength<i;){let{value:a,done:l}=await Promise.race([r.next(),w]);if(l===!0)throw new p("unexpected end of input","ERR_UNEXPECTED_EOF");n.append(a)}let h=n.sublist(0,i);return n.consume(i),h}finally{f!=null&&u?.signal?.removeEventListener("abort",f)}},write:async(i,u)=>{u?.signal?.throwIfAborted(),i instanceof Uint8Array?await e.push(i,u):await e.push(i.subarray(),u)},unwrap:()=>{if(n.byteLength>0){let i=s.source;s.source=async function*(){t?.yieldBytes===!1?yield n:yield*n,yield*i}()}return s}}}return k(_);})();
return ItByteStream}));
